//_mediumscreen.scss

// Medium screens
@media only screen and (min-width: 40.063em) { 

/*----Dividers ---*/

.divider{

  border-bottom-style: solid;
   
    &:before, &:after {
      content: " ";
    position: absolute;
    height: 0;
    width: 0;
    border: solid transparent;
    pointer-events: none;
    top: inherit;
    left: 48%;
    }

}

.section1Divider{
  border-bottom-color: $divider1;
  border-bottom-width: calc(10px);
  
    &:before {
      
       border-top: calc(40px) solid $divider1;
      border-left-width: calc(40px);
      border-right-width: calc(40px);
    }

  
    &:after {
    
    border-top: calc(40px) solid $headerBg;
    border-left-width: calc(40px);
    border-right-width: calc(40px);
    margin-top: -12px;
    
    }
  }


  .section4bBlockGrid {
  @include block-grid(
    // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
    // Available options: 1-12 by default, and false.
    $per-row: 5,

    // This controls how much space is between each item in the block grid.
    // Use a variable or any pixel or em values.
    $spacing: 15px,

    // This controls whether or not base styles come through, set to false to leave out.
    $base-style: true
  );
}

.section4Divider{
  border-bottom-color: $section4Border;
  border-bottom-width: calc(10px);
  
    &:before {
      
      border-top: calc(40px) solid $section4Border;
      border-left-width: calc(40px);
      border-right-width: calc(40px);
    }

  
    &:after {
    
    border-top: calc(40px) solid $section4Bg;
    border-left-width: calc(40px);
    border-right-width: calc(40px);
    margin-top: -12px;
    
    }
  }


.section7Divider{
  border-bottom-color: $divider7;
  border-bottom-width: calc(10px);
  
    &:before {
      
       border-top: calc(40px) solid $divider7;
      border-left-width: calc(40px);
      border-right-width: calc(40px);
    }

  
    &:after {
    
    border-top: calc(40px) solid $section7Bg;
    border-left-width: calc(40px);
    border-right-width: calc(40px);
    margin-top: -12px;
    
    }
  }


.footerDivider{
  border-bottom-color: $dividerFooter;
  border-bottom-width: calc(10px);
  
    &:before {
      
       border-bottom: calc(40px) solid white;
      border-left-width: calc(40px);
      border-right-width: calc(40px);
      margin-top:-40px;
    }

  
    &:after {
    
    border-bottom: calc(40px) solid $dividerFooter;
    border-left-width: calc(40px);
    border-right-width: calc(40px);
    margin-top: -40px;
    
    }
  }



/*----button and optin ---*/



.orangeBtn{
 font-size: calc(35px);

}


.optinLeft{
  float: left;
  padding-left: 0.9375rem;
  display: block;

  img{
    margin-right: 5px;
  }
}

.optinRight{
  float: right;
  padding-right: 0.9375rem;
  display: block;
}



.optinLeftImg{
  float: left;
}

.optinRightText{
  float: left;
  }



/* ---------ribbons */
.ribbon-wrapper {
  overflow: hidden;
  position: relative;
 
  right: calc(-35px);
  float: right;
  margin-bottom: 22px;
  //margin-top: -22px;
  padding-top: 22px;
  width: 100%;
  white-space: nowrap;
}

.ribbon-container {
  color: #fffffa;
  clear: both;
  font-size: 30px;
  font-weight: 700;
  background: $ribbon;
  height: calc(55px);
  padding: 7px 22px;
  position: relative;
  float: right;
  max-width: 100%;
  width: 90%;
  white-space: nowrap;
 

  &:before{

  content: "";
  position: absolute;
  bottom: 0;
  border: 27px solid $ribbon;
  height: 0;
  z-index: 5;
  left: -36px;
  border-left-width: 15px;
  border-left-color: transparent;
  padding: 1px 0 0 0;
  }

  &:after{

  content: '';
  position: absolute;
  right: 0;
  top: -20px;
  width: 0;
  height: 0;
  overflow: hidden;
  font: 0/0 a;
  color: transparent;
  text-decoration: none;
  border-width: 20px 0 0 21px;
  border-color: transparent $ribbonAfter;
  border-style: dashed solid;
  }

}

p.ribbon {
  font-size: 24px;
}




/*-- section 3 --*/

[class*="block-grid-"] {
  margin: 0 2rem;
}


.section3Img{
margin-top: calc(100px);
}


#section3-right ol {
  margin-top: calc(100px);
}

.section3b{
	margin-top:calc(30px); 
}

.section3cRight {
	//margin-bottom: 5rem;
}




/*--- Section 3 grid -----*/

.section3BlockGrid{
   @include block-grid(
    // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
    // Available options: 1-12 by default, and false.
    $per-row:3,

    // This controls how much space is between each item in the block grid.
    // Use a variable or any pixel or em values.
    //$spacing: $block-grid-default-spacing,
      $spacing: 10px,

    // This controls whether or not base styles come through, set to false to leave out.
    $base-style: true

  );

   h2{
    font-size: 21px;
    letter-spacing: -1px;

   }

.section3GridItem {
  
  min-height: 680px;
}


}

.mbgText
  {
  padding-top: 10px;
  }
   .mbgText1{
    font-size: 35px;
   
  }
  .mbgText2{
    font-size: 20px;
  }

 .mbgText3{
  font-size: 35px;
  color:#0E54A5;
  }


  /* Section6
---------------------------------------------------------------------------------------------------- */


ol {
    counter-reset: li; /* Initiate a counter */
    list-style: none; /* Remove default numbering */
    *list-style: decimal; /* Keep using default numbering for IE6/7 */
    
    padding: 0;
    
    text-shadow: 0 1px 0 rgba(255,255,255,.5);
}

ol ol {
    margin: 0 0 0 2em; /* Add some left margin for inner lists */
}

.rectangle-list2 :last-child:after{
     background: transparent;
     &:hover{
      background: transparent;
      }
}







.rectangle-list2 li{
    position: relative;
    display: block;
    padding: 0em 0em 0em 5em;
    *padding: .4em;
    margin-top:2.1rem; 
    margin-right:0;
    margin-bottom:0;
    margin-left:5rem;
    
    color: $pColor;
    font-size: calc(20px);
    text-decoration: none;
    transition: none;  
    
    //height:100px;
    text-align: left;

}

.rectangle-list2 li:hover{
    

}   

.rectangle-list2 li:before{
    content: counter(li);
    counter-increment: li;
    position: absolute; 
    left: calc(0px);
    top: 0;
    margin-top: 0em;
    background: $bulletSquare2;
    //height: 2em;
    width: 2em;
    line-height: 2em;
    text-align: center;
    font-weight: bold;
    color: $bulletNumber2;
    font-size: calc(22px);
    
}

.rectangle-list2 li:after{
   content: "";
  display: block;
  background-color: $bulletLine;
  height: 100%;
  position: absolute;
  top: 2em;
  left: calc(21px);
  width: 2px;  
  z-index: -1;      
}



/* Section 7
---------------------------------------------------------------------------------------------------- */








.section7BlockGrid3{
  @include block-grid(
    // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
    // Available options: 1-12 by default, and false.
    $per-row: 3,

    // This controls how much space is between each item in the block grid.
    // Use a variable or any pixel or em values.
    $spacing: 10px,

    // This controls whether or not base styles come through, set to false to leave out.
    $base-style: true
  );
    margin-bottom: calc(30px);
    margin-top: calc(30px);
}
.section7BlockGrid4{
  @include block-grid(
    // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
    // Available options: 1-12 by default, and false.
    $per-row: 2,

    // This controls how much space is between each item in the block grid.
    // Use a variable or any pixel or em values.
    $spacing: 10px,

    // This controls whether or not base styles come through, set to false to leave out.
    $base-style: true
  );

  margin-bottom: calc(30px);
  margin-top: calc(30px);
}
.section7BlockGrid5{
  @include block-grid(
    // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
    // Available options: 1-12 by default, and false.
    $per-row: 2,

    // This controls how much space is between each item in the block grid.
    // Use a variable or any pixel or em values.
    $spacing: $block-grid-default-spacing,

    // This controls whether or not base styles come through, set to false to leave out.
    $base-style: true
  );

  margin-bottom: calc(30px);
  margin-top: calc(30px);
}


  } /* min-width 641px, medium screens */